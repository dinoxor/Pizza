@model The_Ace_of_Spades_Pizza.Site.Models.OrderCreateModel

@{
    ViewBag.Title = "Order Form";
}

<h2 class="mt-5">Order form</h2>


@using (Html.BeginForm("Create", "Order"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal ml-lg-5">
        <h5>Place your order here!</h5>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*<div class="form-group">
                @Html.LabelFor(model => model.CustomerId, "CustomerId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("CustomerId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })
                </div>
            </div>*@
        @{
            if (Model.isSuccessful)
            {
                <div class="alert-success">
                    <strong>@Html.Raw(Model.ConfirmationMessage)</strong>
                </div>
            }
            else
            {
                <div class="alert-danger">
                    <strong>@Html.Raw(Model.ConfirmationMessage)</strong>
                </div>
            }
        }
        <br />
        <br />


        <div class="form-group row">
            @Html.Label("First Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Customer.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Customer.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.Label("Last Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Customer.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Customer.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.Label("Phone Number", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Customer.PhoneNumber, new { htmlAttributes = new { @class = "form-control", maxLength = 10 } })
                @Html.ValidationMessageFor(model => model.Customer.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.Label("Pizza", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.PizzaId, Model.Pizzas, "Select your Pizza", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PizzaId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.Label("Delivery date", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DeliveryArrivalDateTime, new { htmlAttributes = new { @class = "form-control date-picker" } })
                @Html.ValidationMessageFor(model => model.DeliveryArrivalDateTime, "", new { @class = "text-danger" })
            </div>

        </div>

        <div class="form-group row">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit" class="btn btn-default" />
            </div>
        </div>
    </div>
}


<br />
<br />

@*<div>
    @Html.ActionLink("View all orders", "Index")
</div>*@

<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
<script src="~/Scripts/jquery-3.3.1.min.js"></script>

<link href="~/Content/jquery-ui-timepicker-addon.min.css" rel="stylesheet" />
<script src="~/Scripts/jquery-ui-timepicker-addon.min.js"></script>
<script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
<script src="~/Scripts/jquery-ui-timepicker-addon.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $(function () {
            $(".date-picker").datetimepicker({
                changeMonth: true,
                changeYear: true,
                yearRange: "-100:+0",
                dateFormat: 'mm-dd-yy',
                controlType: 'select',
                timeFormat: 'hh:mm TT'
            });

        });
        $(function () {
            $.validator.methods.date = function (value, element) {
                if ($.browser.webkit) {

                    //ES - Chrome does not use the locale when new Date objects instantiated:
                    var d = new Date();

                    return this.optional(element) || !/Invalid|NaN/.test(new Date(d.toLocaleDateString(value)));
                }
                else {

                    return this.optional(element) || !/Invalid|NaN/.test(new Date(value));
                }
            };
        });

    });

</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")
}
