@model The_Ace_of_Spades_Pizza.Models.OrderCreateModel

@{
    ViewBag.Title = "Order Form";
}

<h2 class="mt-5">Order form</h2>


@using (Html.BeginForm("Create", "Orders"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal ml-lg-5">
        <h5>Place your order here!</h5>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*<div class="form-group">
                @Html.LabelFor(model => model.CustomerId, "CustomerId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("CustomerId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group row">
            @Html.Label("First Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Customer.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Customer.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.Label("Last Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Customer.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Customer.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.Label("Phone Number", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Customer.PhoneNumber, new { htmlAttributes = new { @class = "form-control", maxLength = 10 } })
                @Html.ValidationMessageFor(model => model.Customer.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.Label("Pizza", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.PizzaId, Model.Pizzas, "Select your Pizza", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PizzaId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.Label("Delivery date time", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DeliveryArrivalDateTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DeliveryArrivalDateTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@{
    if (Model.isSuccessful)
    {
        <div class="alert-success">
            <strong>@Html.Raw(Model.ConfirmationMessage)</strong>
        </div>
    }
    else
    {
        <div class="alert-danger">
            <strong>@Html.Raw(Model.ConfirmationMessage)</strong>
        </div>
    }
 }
<br />
<br />

<div>
    @Html.ActionLink("View all orders", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
